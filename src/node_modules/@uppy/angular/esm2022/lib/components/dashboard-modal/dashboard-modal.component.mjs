import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import Dashboard from '@uppy/dashboard';
import { Uppy } from '@uppy/core';
import { UppyAngularWrapper } from '../../utils/wrapper';
import * as i0 from "@angular/core";
export class DashboardModalComponent extends UppyAngularWrapper {
    constructor(el) {
        super();
        this.el = el;
        this.uppy = new Uppy;
        this.props = {};
        this.open = false;
    }
    ngOnInit() {
        this.onMount({
            id: 'angular:DashboardModal',
            inline: false,
            target: this.el.nativeElement
        }, Dashboard);
    }
    ngOnChanges(changes) {
        this.handleChanges(changes, Dashboard);
        // Handle dashboard-modal specific changes
        if (changes['open'] && this.open !== changes['open'].previousValue) {
            if (this.open && !changes['open'].previousValue) {
                this.plugin.openModal();
            }
            if (!this.open && changes['open'].previousValue) {
                this.plugin.closeModal();
            }
        }
    }
    ngOnDestroy() {
        this.uninstall();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: DashboardModalComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.1", type: DashboardModalComponent, selector: "uppy-dashboard-modal", inputs: { uppy: "uppy", props: "props", open: "open" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: DashboardModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'uppy-dashboard-modal',
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { uppy: [{
                type: Input
            }], props: [{
                type: Input
            }], open: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VwcHkvYW5ndWxhci9zcmMvbGliL2NvbXBvbmVudHMvZGFzaGJvYXJkLW1vZGFsL2Rhc2hib2FyZC1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSx1QkFBdUIsRUFBYyxLQUFLLEVBQXVDLE1BQU0sZUFBZSxDQUFDO0FBQzNILE9BQU8sU0FBUyxNQUFNLGlCQUFpQixDQUFDO0FBRXhDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbEMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUJBQXFCLENBQUM7O0FBT3pELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxrQkFBNkI7SUFLeEUsWUFBbUIsRUFBYztRQUMvQixLQUFLLEVBQUUsQ0FBQztRQURTLE9BQUUsR0FBRixFQUFFLENBQVk7UUFKeEIsU0FBSSxHQUFTLElBQUksSUFBSSxDQUFDO1FBQ3RCLFVBQUssR0FBcUIsRUFBRSxDQUFDO1FBQzdCLFNBQUksR0FBWSxLQUFLLENBQUM7SUFJL0IsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsRUFBRSxFQUFFLHdCQUF3QjtZQUM1QixNQUFNLEVBQUUsS0FBSztZQUNiLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWE7U0FDOUIsRUFBRSxTQUFTLENBQUMsQ0FBQTtJQUNmLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDdkMsMENBQTBDO1FBQzFDLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLGFBQWEsRUFBRTtZQUNsRSxJQUFHLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBYSxFQUFFO2dCQUM5QyxJQUFJLENBQUMsTUFBTyxDQUFDLFNBQVMsRUFBRSxDQUFBO2FBQ3pCO1lBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLGFBQWEsRUFBRTtnQkFDL0MsSUFBSSxDQUFDLE1BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQTthQUMxQjtTQUNGO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkIsQ0FBQzs4R0FoQ1UsdUJBQXVCO2tHQUF2Qix1QkFBdUIsZ0tBSHhCLEVBQUU7OzJGQUdELHVCQUF1QjtrQkFMbkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxRQUFRLEVBQUUsRUFBRTtvQkFDWixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7aUdBRVUsSUFBSTtzQkFBWixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBFbGVtZW50UmVmLCBJbnB1dCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCBEYXNoYm9hcmQgZnJvbSAnQHVwcHkvZGFzaGJvYXJkJztcbmltcG9ydCB0eXBlIHsgRGFzaGJvYXJkT3B0aW9ucyB9IGZyb20gJ0B1cHB5L2Rhc2hib2FyZCc7XG5pbXBvcnQgeyBVcHB5IH0gZnJvbSAnQHVwcHkvY29yZSc7XG5pbXBvcnQgeyBVcHB5QW5ndWxhcldyYXBwZXIgfSBmcm9tICcuLi8uLi91dGlscy93cmFwcGVyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndXBweS1kYXNoYm9hcmQtbW9kYWwnLFxuICB0ZW1wbGF0ZTogJycsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIERhc2hib2FyZE1vZGFsQ29tcG9uZW50IGV4dGVuZHMgVXBweUFuZ3VsYXJXcmFwcGVyPERhc2hib2FyZD4gaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHVwcHk6IFVwcHkgPSBuZXcgVXBweTtcbiAgQElucHV0KCkgcHJvcHM6IERhc2hib2FyZE9wdGlvbnMgPSB7fTtcbiAgQElucHV0KCkgb3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbDogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm9uTW91bnQoe1xuICAgICAgaWQ6ICdhbmd1bGFyOkRhc2hib2FyZE1vZGFsJyxcbiAgICAgIGlubGluZTogZmFsc2UsXG4gICAgICB0YXJnZXQ6IHRoaXMuZWwubmF0aXZlRWxlbWVudFxuICAgIH0sIERhc2hib2FyZClcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZXMoY2hhbmdlcywgRGFzaGJvYXJkKTtcbiAgICAvLyBIYW5kbGUgZGFzaGJvYXJkLW1vZGFsIHNwZWNpZmljIGNoYW5nZXNcbiAgICBpZiAoY2hhbmdlc1snb3BlbiddICYmIHRoaXMub3BlbiAhPT0gY2hhbmdlc1snb3BlbiddLnByZXZpb3VzVmFsdWUpIHtcbiAgICAgIGlmKHRoaXMub3BlbiAmJiAhY2hhbmdlc1snb3BlbiddLnByZXZpb3VzVmFsdWUpIHtcbiAgICAgICAgdGhpcy5wbHVnaW4hLm9wZW5Nb2RhbCgpXG4gICAgICB9XG4gICAgICBpZiAoIXRoaXMub3BlbiAmJiBjaGFuZ2VzWydvcGVuJ10ucHJldmlvdXNWYWx1ZSkge1xuICAgICAgICB0aGlzLnBsdWdpbiEuY2xvc2VNb2RhbCgpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy51bmluc3RhbGwoKTtcbiAgfVxuXG59XG4iXX0=